---
name: cd (staging)
on:
  pull_request:
    branches: [main]
    types: [labeled, opened, synchronize]
    paths:
      - .github/workflows/cd-staging.yaml
      - pipelines/**/*
      - pyproject.toml
      - uv.lock
      - Dockerfile
      # dbt files
      - models/**/*.sql
      - models/**/*.yml
      - macros/**/*
      - tests-dbt/**/*
      # dbt config files
      - dbt_project.yml
      - packages.yml
env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  GH_PAT: ${{ secrets.GH_PAT }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER_NAME }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  IMAGE_NAME: ghcr.io/basedosdados/prefect-flows
  PREFECT__BACKEND: cloud
  PREFECT__CLOUD__API: https://prefect.basedosdados.org/api
  PREFECT__CLOUD__PORT: 443
  PREFECT__SERVER__PROJECT: ${{ secrets.PREFECT__SERVER__PROJECT__STAGING }}
  PREFECT_AUTH_TOML: ${{ secrets.PREFECT_AUTH_TOML }}
  VAULT_ADDRESS: https://vault.basedosdados.org/
  VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
jobs:
  deploy-staging:
    # if: startsWith(github.head_ref, 'staging/')
    name: deploy (staging)
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Set up Python
        run: uv python install
      - name: Install dependencies
        run: uv sync --locked
      - uses: google-github-actions/auth@v2
        with:
          export_environment_variables: true
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      - name: Update image tag in constants
        run: |-
          uv run .github/workflows/scripts/replace_docker_tag.py $IMAGE_NAME $GITHUB_SHA
      - name: Get all changed files using a space separator
        id: changed-files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c  # v46
        with:
          separator: ' '
      - name: Perform code tree analysis
        id: code-tree-analysis
        run: |
          uv run .github/workflows/scripts/code_tree_analysis.py "${{ steps.changed-files.outputs.all_modified_files }}" --write-to-file
      - name: Write auth.toml
        run: |-
          mkdir -p $HOME/.prefect
          echo $PREFECT_AUTH_TOML | base64 --decode > $HOME/.prefect/auth.toml
      - name: Wait for Docker image to be available
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          check-name: Build Docker image
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          verbose: true
      - name: Register Prefect flows
        run: |-
          uv run .github/workflows/scripts/register_flows.py \
            --project $PREFECT__SERVER__PROJECT \
            --path pipelines/ \
            --filter-affected-flows \
            --modified-files "${{ steps.changed-files.outputs.all_modified_files }}"
  test-dbt-dev-model:
    if: contains(github.event.pull_request.labels.*.name, 'test-dev-model')
    name: test dbt dev model
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Get all changed files using a comma separator
        id: changed-files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c  # v46
        with:
          files: |
            models/**/*.sql
      - name: List dbt models files changed
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |-
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file"
          done
      - name: Install uv
        if: steps.changed-files.outputs.all_changed_files != ''
        uses: astral-sh/setup-uv@v5
      - name: Set up Python
        if: steps.changed-files.outputs.all_changed_files != ''
        run: uv python install
      - name: Install dependencies
        if: steps.changed-files.outputs.all_changed_files != ''
        run: uv sync --locked --only-dev
      - name: Install dbt deps
        if: steps.changed-files.outputs.all_changed_files != ''
        run: uv run dbt deps
      - name: Run dbt test
        if: steps.changed-files.outputs.all_changed_files != ''
        run: uv run dbt test --select ${{ steps.changed-files.outputs.all_changed_files }}
