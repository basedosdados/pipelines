---
name: Build and Publish Prefect base libs (Dockerfile.base)
on:
  push:
    branches: [main]
    paths: [.github/workflows/build-docker-base.yaml, Dockerfile.base]
  pull_request:
    branches: [main]
    paths: [.github/workflows/build-docker-base.yaml, Dockerfile.base]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: basedosdados/prefect-base-libs
jobs:
  build-and-publish:
    name: Build and publish Prefect base libs (Dockerfile.base)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: gabriel-milan
          password: ${{ secrets.GH_PAT }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      # A imagem vai ter a tag `latest` quando for um push na main. Quando
      # for feito push em um PR a tag vai ser o commit `GITHUB_SHA`
      # Isso é para garantir que as modificações feitas em um PR não sobreescreva
      # a imagem `latest` que é usada em `Dockerfile`. Dessa forma modificações
      # em `Dockerfile.base` podem ser feitas de forma isolada e testadas no
      # arquivo `Dockerfile`.
      # - name: Define Docker tag
      #   run: |
      #     if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
      #       echo "DOCKER_TAG=latest" >> $GITHUB_ENV
      #     elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
      #       echo "DOCKER_TAG=$GITHUB_SHA" >> $GITHUB_ENV
      #     else
      #       exit 1
      #     fi
      - name: Build and publish Dockerfile.base
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.base
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
