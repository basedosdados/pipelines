name: Table prod
on:
  issue_comment:
    types: [created, edited, deleted]


jobs:
  validate_comment_and_approval:
    runs-on: ubuntu-latest

    if: contains(github.event.comment.html_url, '/pull/')

    steps:
      - name: Get PR number
        id: pr
        run: |
          if [[ "${{ github.event.issue.pull_request.url }}" != "" ]]; then
            echo "PR_URL=${{ github.event.issue.pull_request.url }}" >> $GITHUB_OUTPUT
          else
            echo "PR_URL=${{ github.event.pull_request.url }}" >> $GITHUB_OUTPUT
          fi

      - name: Get PR number from URL
        id: pr_data
        uses: actions/github-script@v7
        with:
          script: |
            const prUrl = '${{ steps.pr.outputs.PR_URL }}';
            const prNumber = prUrl.split('/').pop();
            return prNumber;
          result-encoding: string

      - name: Check if `/table-to-prod` comment is from team member
        id: comment_check
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ steps.pr_data.outputs.result }};
            const org = context.repo.owner;
            const teamSlug = 'release-managers';

            const comments = await github.rest.issues.listComments({
              owner: org,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            let matched = false;

            for (const comment of comments.data) {
              if (comment.body.trim() === '/table-to-prod') {
                try {
                  await github.rest.teams.getMembershipForUserInOrg({
                    org,
                    team_slug: teamSlug,
                    username: comment.user.login,
                  });
                  matched = true;
                  break;
                } catch (error) {
                  // User is not in the team
                }
              }
            }

            core.setOutput('comment_valid', matched ? 'true' : 'false');

      - name: Check for team member approval
        id: approval_check
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ steps.pr_data.outputs.result }};
            const org = context.repo.owner;
            const teamSlug = 'release-managers';

            const reviews = await github.rest.pulls.listReviews({
              owner: org,
              repo: context.repo.repo,
              pull_number: prNumber
            });

            let approved = false;

            for (const review of reviews.data.reverse()) {
              if (review.state === 'APPROVED') {
                try {
                  await github.rest.teams.getMembershipForUserInOrg({
                    org,
                    team_slug: teamSlug,
                    username: review.user.login,
                  });
                  approved = true;
                  break;
                } catch (error) {
                  // User is not in the team
                }
              }
            }

            core.setOutput('approved', approved ? 'true' : 'false');

      - name: Final check
        run: |
          echo "Comment valid: ${{ steps.comment_check.outputs.comment_valid }}"
          echo "Approval valid: ${{ steps.approval_check.outputs.approved }}"
          if [[ "${{ steps.comment_check.outputs.comment_valid }}" == "true" && "${{ steps.approval_check.outputs.approved }}" == "true" ]]; then
            echo "✅ All conditions met."
          else
            echo "❌ Missing required comment or approval from team."
            exit 1
          fi

